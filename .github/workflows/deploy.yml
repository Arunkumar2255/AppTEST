name: Build, Push, and Deploy to GKE

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-push-deploy:
    name: Build, Push, and Deploy
    runs-on: self-hosted  # Ensure this runs on your self-hosted runner
    steps:
    # Step 1: Checkout Repository
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Step 2: Authenticate Docker to Artifact Registry
    - name: Authenticate Docker to Artifact Registry
      run: sudo gcloud auth configure-docker asia-east1-docker.pkg.dev

    # Step 3: Build Docker Image
    - name: Build Docker Image
      id: build
      run: |
        IMAGE_NAME=asia-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-repo/my-app
        sudo docker build -t $IMAGE_NAME ./AppRes
        echo "::set-output name=image::$IMAGE_NAME"

    # Step 4: Push Docker Image to Artifact Registry
    - name: Push Docker Image to Artifact Registry
      run: |
        IMAGE_NAME=${{ steps.build.outputs.image }}
        sudo docker push $IMAGE_NAME

    # Step 5: Install Helm
    - name: Install Helm
      run: |
        curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
        helm version

    # Step 6: Configure kubectl and Helm
    - name: Configure kubectl and Helm
      run: |
        sudo mkdir -p $HOME/.kube
        echo "${{ secrets.KUBE }}" | sudo tee $HOME/.kube/config > /dev/null
        sudo chmod 644 $HOME/.kube/config
      env:
        KUBECONFIG: $HOME/.kube/config

    # Step 7: Test kubectl Access
    - name: Test kubectl access
      run: |
        kubectl get pods --all-namespaces

    # Step 8: Deploy Using Helm
    - name: Deploy to GKE
      run: |
        IMAGE_NAME=${{ steps.build.outputs.image }}
        helm upgrade --install my-app ./helm/chart \
          --namespace default \
          --set image.repository=$(echo $IMAGE_NAME | cut -d':' -f1) \
          --set image.tag=$(echo $IMAGE_NAME | cut -d':' -f2)
